// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// resn
NumericVector resn(int& n_, NumericVector& xi, NumericVector& omega, NumericVector& alpha, double& tau);
RcppExport SEXP _missMS_resn(SEXP n_SEXP, SEXP xiSEXP, SEXP omegaSEXP, SEXP alphaSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int& >::type n_(n_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double& >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(resn(n_, xi, omega, alpha, tau));
    return rcpp_result_gen;
END_RCPP
}
// rnormCpp
NumericVector rnormCpp(int n_);
RcppExport SEXP _missMS_rnormCpp(SEXP n_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_(n_SEXP);
    rcpp_result_gen = Rcpp::wrap(rnormCpp(n_));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_missMS_resn", (DL_FUNC) &_missMS_resn, 5},
    {"_missMS_rnormCpp", (DL_FUNC) &_missMS_rnormCpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_missMS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
